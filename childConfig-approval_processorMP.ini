[general]
; process_type is used to load libraries and determine behavior
process_type = approval_processorMP

; the checks that are to be performed. we expect one section for each check listed here
checks = labelCheck, farCheck, injectionCheck, operator_signoffCheck, advocate_signoffCheck, iDQ_joint_fapCheck, have_lvem_skymapCheck

approval_processorMP_logfile = /approval_processorMP.log

client = https://gracedb.ligo.org/api/
;client = https://moe.phys.uwm.edu/branson/api/
;client = https://simdb.phys.uwm.edu/api/

; local file directory where the EventDicts.p, EventDicts.txt, and log file will be saved
; leave out the home directory location and end forward slash
approval_processorMPfiles = /public_html/monitor/approval_processorMP/files

voeventerror_email = mina19@umd.edu

; the time in seconds we should wait after last lvalert to delete an event dictionary
; currently set to 1 week
forgetmenow_timeout = 604800

;-----------------------------------------------------------------------------
; basic checks for event
;-----------------------------------------------------------------------------

; -------------- sending out VOEvents -------------------
; force_all_internal = 'yes' uses internal = 1 when calling client.CreateVOEvent. This means all VOEvents will be internal, meaning they will not be sent to astronomers. This flag should be set whenever testing.
; preliminary_internal is a list of pipelines for which we keep the Preliminary VOEvents internal
; if there is more than one pipeline in the list, separate with commas. for example, 'LIB, gstlal'
force_all_internal = yes
preliminary_internal = LIB, MBTAOnline, gstlal, CWB

[labelCheck]
; checks for DQV or INJ label. we further have the option to treat hardware injections as real events or not using the 'hardware_inj' parameter

; --------------- hardware injections -------------------
; hardware_inj is either 'yes' or 'no'. 'yes' means treat hardware injection events as real events. 'no' means we do not.
; for engineering runs we sometimes treat hardware injections as real events so it is set to 'yes'. 
; for science runs it should say 'no'.
hardware_inj = yes

[farCheck]
; checks whether the false alarm rate is lower than the 'default_farthresh' or pipeline specific 'farthresh' parameter
; ---------------- FAR ----------------------------------
; 3.17e-08 is one per year. this is the threshold set for post-O1 opportunistic running
default_farthresh = 3.17e-08 
farthresh[gstlal.LowMass] = 3.8e-07
; farthresh[gstlal.HighMass] = 3.8e-07
; farthresh[MBTAOnline.] = 3.8e-07

[injectionCheck]
; checks whether any hardware injections were found +/-'time_duration' seconds of the event gpstime
time_duration = 2

[operator_signoffCheck]
; checks that signoffs from each relevant instrument site is 'OK'. we have the option to wait for human signoffs or not using the 'humanscimons' parameter
; ---------------- operator signoffs --------------------
; humanscimons is either 'yes' or 'no'. 'yes' means we wait for human signoffs. 'no' means we do not.
humanscimons = yes

[advocate_signoffCheck]
; checks that EM follow-up advocates 'OK' the event. we have the option to wait for advocate signoffs or not using the 'advocates' parameter
; ---------------- advocates ----------------------------
; advocates is either 'yes' or 'no'. 'yes' means we wait for a follow-up advocate to signoff. 'no' means we do not.
; advocate_text is the 1-2 line alert that will be read aloud to advocates via a phone call using a voice synthesizer.
; advocate_email is set during observing runs to lvc-cloud-phone@email2phone.net
advocates = yes
advocate_text = A transient candidate passed the follow-up criteria. Please check your email immediately and alert others.
advocate_email = mina19@umd.edu

[idq_joint_fapCheck]
; checks that the joint fap idq value is above the 'default_idqthresh' or pipeline specific 'idqthresh' parameter
; ---------------- idq ----------------------------------
; ignore_idq is a list of groups that will not use idq information.
; all idq thresholds for a specific pipeline and search must be added in the form idqthresh[pipeline.search]
; list idq_pipelines we want to use separated by commas. for example, 'ovl, mvsc' means use both ovl and mvsc iDQ pipelines.
ignore_idq = CBC
;idqthresh[CWB.AllSky] = 0.01
default_idqthresh = 0.01
idq_pipelines = ovl

[have_lvem_skymapCheck]
; checks that skymap is tagged 'lvem' for sharing with EM follow-up partners
; ---------------- skymaps ------------------------------
; skymap_ignore_list is a list of skymap submitters to ignore separated by commas.
; for instance, it could say 'BWB Online at CIT, Cwb Analysis', etc.
skymap_ignore_list = BWB Online at CIT

;----------------- pipeline throttle --------------------
; for each possible group_pipeline_search or group_pipeline, set pipeline throttle parameters
[default_PipelineThrottle]
throttleWin = 1000
targetRate = 0.001
requireManualRestart = False
conf = 0.3

